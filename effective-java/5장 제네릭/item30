⭐️ 이왕이면 제네릭 메서드로 만들라

1️⃣ 개요 : 클래스와 마찬가지로, 메서드도 제네릭으로 만들 수 있다. 매개변수화 타입을 받는 정적 유틸리티 메서드는 보통 제네릭이다. 예컨대 Collections의 '알고리즘' 메서드는 모두 제네릭이다.
        제네릭 메서드 작성법은 제네릭 타입 작성법과 비슷하다.

재귀적 타입 한정 : 자기 자신이 들어간 표현식을 사용하여 타입 매개변수의 허용 범위를 한정. 주로 타입의 자연적 순서를 정하는 Comparable 인터페이스와 함께 쓰인다.

📖 핵심 정리 : 제네릭 타입과 마찬가지로, 클라이언트에서 입력 매배변수와 반환값을 명시적으로 형변환해야 하는 메서드보다 제네릭 메서드가 더 안전하며 사용하기도 쉽다.
            타입과 마찬가지로, 메서드도 형변환 없이 사용할 수 있는 편이 좋으며, 많은 경우 그렇게 하려면 제네릭 메서드가 되어야 한다. 역시 타입과 마찬가지로,
            형변환을 해줘야 하는 기존 메서드는 제네릭하게 만들자. 기존 클라이언트는 그대로 둔 채 새로운 사용자의 삶을 훨씬 편하게 만들어줄 것이다.
