⭐️ 비검사 경고를 해제하라

제네릭을 사용하기 시작하면 수많은 컴파일러를 보게 될 것이다. 비검사 형변환 경고, 비검사 메서드 호출 경고, 비검사 매개변수화 가변인수 타입 경고, 비검사 변화 경고 등이다.
제네릭에 익숙해질수록 마주치는 경고 수는 줄겠지만, 새로 작성한 코드가 한번에 깨끗하게 컴파일되리라 기대하지 말자.
대부분의 비검사 경고는 쉽게 제거할 수 있다. 코드를 다음처럼 잘못 작성했다고 해보자.

곧바로 해결되지 않는 경고가 나타나도 포기하지 말자! 할 수 있는 한 모든 비검사 경고를 제거하라. 모두 제거한다면 그 코드는 타입 안정성이 보장된다.
런타임에 ClassCastException이 발생할 일이 없고, 의도한 대로 잘 동작하리라 확신할 수 있다.

경고를 제거할 수는 없지만 타입 안전한다고 확신할 수 있다면 @Suppress Warning("unchecked")에너테이션을 달아 경고를 숨기자.
단, 타입 안전함을 검증하지 않은 채 경고를 숨기면 스스로에게 잘못된 보안 인식을 심어주는 꼴이다. 경고없이 컴파일 되겠지만 Runtime에 ClassCastException을 던질 수 있다.

@SuppressWarning 에너테이션은 개별 지역변수 선언부터 클래스 전체까지 어떤 선언에도 달 수 있다. 하지만 @SuppressWarnings 에너테이션은 항ㅅ아 가능한 한 좁은 범위에 적용하자.

보통은 변수 선언, 아주 짧은 메서드, 혹은 생성자가 될 것이다. 자칫 심각한 경고를 놓칠 수 있으니 절대로 클래스 전체에 적용해서는 안 된다.

한 줄이 넘는 메서드나 생성자에 달린 @SuppressWarnings 애터네이션을 발견하면 지역변수 선언 쪽으로 옮기자. 이를 위해 지역변수를 새로 선언하는 수고를 해야 할 수도 있지만, 그만한 값어치가
있을 것이다. 
