⭐️ 스레드 안정성 수준을 문서화하라

1️⃣ 개요
    - 멀티 스레드 환경에서도 API를 안전하게 사용하게 하려면 클래스가 지원하는 스레드 안정성 수준을 정확히 명시해야 한다.

2️⃣ 스레드 안정성 수준 (스레드 안정성이 높은 순서대로)
    - 불변(immutable)
    - 무조건적 스레드 안전(unconditionally thread-safe)
    - 조건부 조건부 스레드 안전(conditionally thread-safe)
    - 스레드 안전하지 않음(not thread-safe)
    - 스레드 적대적(thread-hostile)

3️⃣ 락 필드는 항상 final로 선언하라.

📖 핵심 정리
    - 모든 클래스가 자신의 스레드 안정성 정보를 명확히 문서화해야 한다. 정확한 언어로 명확히 설명하거나 스레드 안전성 애너테이션을 사용할 수 있다.
      synchronized 한정자는 문서화와 관련없다. 조건부 스레드 안전 클래스는 메서드를 어떤 순서로 호출할 때 외부 동기화가 요구되고, 그 때 어떤 락을 얻어야 하는지도
      알려줘야 한다. 무조건적 스레드 안전 클래스를 작성할 때는 synchronized 메서드가 아닌 비공개 락 객체를 사용하자. 이렇게 해야 클라이언트나 하위 클래스에서
      동기화 메커니즘을 깨드리는 걸 예방할 수 있고, 필요하다면 다음에 더 정교한 동시성을 제어 메커니즘으로 재구현할 여지가 생긴다.
