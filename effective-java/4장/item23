⭐️ 태그 달린 클래스보다는 클래스 계층구조를 활용하라

두 가지 이상의 의미를 표현할 수 있으며, 그중 현재 표현하는 의미를 태그 값으로 알려주는 클래스를 본 적이 있을 것이다.

태그 달린 클래스에는 단점이 한가득이다. 우선 열거 타입 선언, 태그 필드, switch문 등 쓸데없는 코드가 많다.
여러 구현이 한 클래스에 혼합돼 있어서 가독성도 나쁘다. 다른 의미를 위한 코드도 언제나 함께 하니 메모리도 많이 사용한다.
필드들을 final로 선언하려면 해당 의미에 쓰이지 않는 필드들까지 생서자에서 초기화해야 한다.(쓰지 않는 필드를 초기화하는 불필요한 코드 증가)

태그 달린 클래스는 장황하고, 오류를 내기 쉽고, 비효율적이다.
태그 달린 클래스는 클래스 계층 구조를 어설프게 흉내낸 아류일 뿐이다.

[ 태그 달린 클래스를 클래스 계층 구조로 바꾸는 방법 ]

1. 계층 구조의 루트가 될 추상 클래스를 정의하고, 태그 값에 따라 동작이 달라지는 메서드들을 루트 클래스의 추상 메서드로 선언한다. ex. Figure zmffotmdml area 메서드
2. 태그 값에 상관없이 동작이 일정한 메서드들을 루트 클래스에 일반 메서드로 추가한다. 모든 하위 클래스에서 공통으로 사용하는 데이터 필드들도 전부 루트 클래스로 올린다.
Figure 클래스에서는 태그 값에 상관없는 메서드가 하나도 없고 모든 하위 클래스에서 사용하는 공통 데이터 필드도 없다. 그 결과 루트 클래ㅡ에서는 추상 메서드인 area만 남는다.
3. 루트 클래스를 확장한 구체 클래스를 의미별로 하나씩 정의한다. Figure를 확장한 원 클래스와, 사각형 클래스를 만들면 된다. 각 하위 클래스에는 각자의 의미에 해당하는
데이터 필드들을 넣는다. 원에는 radius를 사각형에는 length와 width를 넣으면 된다. 그런 다음 루트 클래스가 정의한 추상 메서드를 각자의 의미에 맞게 구현한다.


핵심 정리
태그 달린 클래스를 써야 하는 상황은 거의 없다. 새로운 클래스를 작성하는 데 태그 필드가 등장한다면 태그를 없애고 계층구조로 대체하는 방법을 생각해보자.
기존 클래스가 태그 필드를 사용하고 있다면 계층구조로 리팩터링하는 걸 고민해보자.
