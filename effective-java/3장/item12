toString을 항상 재정의하라

Object의 기본 메서드가 우리가 작성한 클래스에 적합한 문자열을 반환하는 경우는 거의 없다.

toString의 일반 규약에 따르면 '간결하면서 사람이 읽기 쉬운 형태의 유익한 정보'를 반환해야 한다.
또한, "모든 하위 클래스에서 이 메서드를 재정의하라"고 하낟.

toString을 잘 구현한 클래스는 사용하기에 훨씬 즐겁고, 그 클래스를 사용한 시스템은 디버깅하기 쉽다.

실전에서 toString은 그 객체가 가진 주요 정보를 모두 반환하는 게 좋다.

toString을 구현할 때면 반환값의 포맷을 문서화할지 정해야 한다.
전화번호나 행렬 같은 값 클래스라면 문서화하기를 권한다.
포맷을 명시하면 그 객체는 표준적이고 명확하고, 사람이 읽을 수 있게 된다.

단점: 포맷을 한번 명시하면 평새 그 포맷에 얽매이게 된다.

포맷을 명시하든 아니든 의도는 명확히 밝혀야 한다.

포맷 명시 여부와 상관없이 toString이 반환한 값에 포함된 정보를 얻어올 수 있는 API를 제공하자.

정적 유틸리티 클래스, 대부분의 열거 타입은 완벽한 toString을 제공하낟.

하지만 하위 클래스들이 공유해야 할 문자열 표현이 있느 추상클래스라면 toString을 재정의해줘야 한다.

핵심 정리
모든 구체 클래스에서 Objcet의 toString을 재정의하자. 상위 클래스에서 이미 아람ㅈ게 재저으이한 경우는 예외다. toString을 재정의한 클래스는 사용하기도 즐겁고 그 클래스를 사용한 시스템을 디버깅하기 쉽게 해준다.
tostring은 해당 객체에 관한 명확하고 유용한 정보를 읽기 좋은 형태로 반환해야 한다.
