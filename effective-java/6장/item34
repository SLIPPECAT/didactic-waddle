⭐️ int 상수 대신 열거 타입을 사용하라

1️⃣ 개요 : 열거 타입은 일정 개수의 상수 값을 정의한 다음, 그 외의 값은 허용하지 않는 타입이다. ex. 사계절, 태양계의 행성, 카드게임의 카드
        자바에서 열거 타입을 지원하기 전에는 다음 코드처럼 정수 상수를 한 묶음 선언해서 사용하곤 했다.

        plblic static final int APPLE_FUJI = 0;
        plblic static final int APLLE_PIPPIN = 1;
        plblic static final int APPLE_GRANNY_SMITH = 2;

        정수 열거 패턴 기법에는 단점이 많다. 타입 안전을 보장할 방법이 없으며 표현력도 좋지 않다. 오렌지를 건네야 할 메서드에 사과를 보내고 동등 연산자로 비교하더라도
        컴파일러는 아무런 경고 메시지를 출력하지 않는다.

        정수 열거 패턴을 사용한 프로그램은 깨지기 쉽다. 평범한 상수를 나열한 것뿐이라 컴파일하면 그 값이 클라이언트 파일에 그대로 새겨진다.
        따라서 상수의 값이 바뀌면 클라이언트도 반드시 다시 컴파일해야 한다. 다시 컴파일하지 않은 클라이언트는 실행이 되더라도 엉뚱하게 동작할 것이다.

2️⃣ 열거 타입 : 자바의 열거 타입은 완전한 형태의 클래스라서 (단순 정숫값일 뿐인) 다른 언어의 열거 타입보다 훨씬 강력하다.
        public enum Apple { FUJI, PIPPIN, GRANNY_SMITH }

        자바 열거 타입을 뒷받침하는 아이디어는 단순한다. 열거 타입 자체는 클래스이며, 상수 하나당 자신의 인스턴스를 하나씩 만들어 public static final 필드로 공개한다.
        열거 타입은 밖에서 접근할 수 있는 생성자를 제공하지 않으므로 사실상 final이다. 따라서 클라이언트가 인스턴스를 직접 생성하거나 확장할 수 없으니 열거 타입 선언으로
        만들어진 인스턴스들은 딱 하나씩만 존재함이 보장된다. 즉, 열거 타입은 인스턴스 통제된다. 싱글턴은 원소가 하나뿐인 열거타입이라 할 수 있고, 열거 타입은 싱글턴을
        일반화한 형태라고 볼 수 있다.

        열거 타입은 컴파일타임 타입 안정성을 제공한다. 
